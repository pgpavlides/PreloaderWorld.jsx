// .container {
//     position: fixed;  // ðŸ”¹ make sure it appears above everything else
//     top:0; // ðŸ”¸Position it at the top left corner of the screen
//     left:0; // ðŸ”¸
//     width: 100vw; // ðŸ”¹ make it take the entire ViewPort
//     height: 100vh; // ðŸ”¹ 
//     display: flex; // ðŸ”¸ Make sure its centerted on the screen
//     align-items: center; // ðŸ”¸
//     justify-content: space-around; // ðŸ”¸
//     flex-direction: row; //
//     background: #2e777c;    
// }

// .container_box{
//     display: inherit;
// }

// .box {
    
//     width: 25px; /* 12.5% = 100% / 8, subtract 2px for margin */
//     height: 25px;
//     background-color: #ccc;
//     margin-right: 20px;
//     clip-path: polygon(20% 0%, 0% 20%, 30% 50%, 0% 80%, 20% 100%, 50% 70%, 80% 100%, 100% 80%, 70% 50%, 100% 20%, 80% 0%, 50% 30%);
//     border: 5px solid #1f1f1f;
//     animation: rotate 3s 0.5s ease-in-out infinite ;
//   }

//   @for $i from 1 through 3 { // The @for loop iterates from 1 to 3, assigning the variable $i to each value in turn.
//     .box:nth-child(#{$i}n) { // The loop generates a selector for each .box element using the :nth-child() CSS pseudo-class with the value of $i passed as an argument. This creates selectors .box:nth-child(1n), .box:nth-child(2n), and .box:nth-child(3n) respectively.
//         animation-delay: #{$i * 0.3}s; //The animation-delay property is set for each of the generated selectors, with the value of $i multiplied by 0.3 and appended with an "s" to denote seconds.
//     }
// }




//   .box:last-child {
//     margin-right: 0;
//   }

//   @keyframes rotate {
      
//     to { transform: rotate(360deg) }
  
//   }

